# pipeline/execute_effect.py
#!/usr/bin/env python3
import sys
import asyncio # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π

def execute_effect(row, payload, bot): # <-- –î–æ–±–∞–≤–ª—è–µ–º bot –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç side-effect –¥–µ–π—Å—Ç–≤–∏—è"""
    action = row.get("result_action", "").strip()
    if not action:
        print("[execute_effect] ‚èπÔ∏è –ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è", file=sys.stderr)
        return

    print(f"[execute_effect] üõ†Ô∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {action!r}", file=sys.stderr)

    # --- –ù–ê–ß–ê–õ–û: –ù–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ chat_id ---
    if action.startswith("notify_user_by_chat_id:"):
        try:
            # –§–æ—Ä–º–∞—Ç: notify_user_by_chat_id:target_chat_id:message_template
            # message_template –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã {field}, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –∏–∑ payload
            parts = action.split(":", 2)
            if len(parts) < 3:
                print(f"[execute_effect] ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç notify_user_by_chat_id: {action}", file=sys.stderr)
                return
            _, target_chat_id_str, message_template = parts

            # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –∏–∑ payload –≤ message_template
            text_to_send = message_template
            for key, value in payload.items():
                placeholder = "{" + key + "}"
                if placeholder in text_to_send:
                    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ parse_mode HTML
                    # import html # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ
                    # safe_val = html.escape(str(value))
                    # text_to_send = text_to_send.replace(placeholder, safe_val)
                    # –ü–æ–∫–∞ –±–µ–∑ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ
                    text_to_send = text_to_send.replace(placeholder, str(value))

            target_chat_id = int(target_chat_id_str)
            print(f"[execute_effect] üì¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ {target_chat_id!r}: {text_to_send!r}", file=sys.stderr)
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–π–ø–ª–∞–π–Ω
            # asyncio.create_task(bot.send_message(target_chat_id, text_to_send))
            # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ await (–±–ª–æ–∫–∏—Ä—É–µ—Ç, –Ω–æ –ø—Ä–æ—â–µ)
            asyncio.run_coroutine_threadsafe(bot.send_message(target_chat_id, text_to_send), bot.session._connector._loop)
            # await bot.send_message(target_chat_id, text_to_send) # –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ

        except ValueError:
            print(f"[execute_effect] ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç chat_id –≤ notify_user_by_chat_id: {action}", file=sys.stderr)
        except Exception as e:
            print(f"[execute_effect] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}", file=sys.stderr)
        return
    # --- –ö–û–ù–ï–¶: –ù–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---

    # --- –°–¢–ê–†–´–ï —ç—Ñ—Ñ–µ–∫—Ç—ã ---
    if action.startswith("save:"):
        try:
            _, field, value = action.split(":", 2)
            # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ payload –≤ value (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            for k, v in payload.items():
                placeholder = "{" + k + "}"
                if placeholder in value:
                    value = value.replace(placeholder, str(v))
            payload[field] = value
            print(f"[execute_effect] üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {field} = {value!r}", file=sys.stderr)
        except ValueError:
            print(f"[execute_effect] ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç save: {action}", file=sys.stderr)
    elif action.startswith("clear:"):
        field = action.split(":", 1)[1]
        payload.pop(field, None)
        print(f"[execute_effect] üßπ –û—á–∏—â–µ–Ω–æ {field}", file=sys.stderr)
    else:
        print(f"[execute_effect] ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}", file=sys.stderr)
