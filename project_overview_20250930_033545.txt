================================================================================
–î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ï–ö–¢–ê
================================================================================
–ü—Ä–æ–µ–∫—Ç: tbot2
–ü—É—Ç—å: C:\W\Projects\tbot2
–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: 2025-09-30 03:35:45
–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: 114.5 kB
–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: 33
–í—Å–µ–≥–æ –ø–∞–ø–æ–∫: 9

üå≥ –î–†–ï–í–û–í–ò–î–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:
.
‚îú‚îÄ‚îÄ üìÑ 08_core_loop.py (5.0 kB)
‚îú‚îÄ‚îÄ üìÑ create_test_media.py (959 Bytes)
‚îú‚îÄ‚îÄ üìÑ project_analyzer4.py (17.2 kB)
‚îú‚îÄ‚îÄ üìÑ table.csv (11.8 kB)
‚îú‚îÄ‚îÄ üìÑ table_final.csv (11.9 kB)
‚îú‚îÄ‚îÄ üìÑ table_fixed.csv (11.9 kB)
‚îú‚îÄ‚îÄ üìÑ table_pizza.csv (737 Bytes)
‚îú‚îÄ‚îÄ üìÑ table_urls.csv (2.0 kB)
‚îú‚îÄ‚îÄ üìÑ –∞—Ä—Ö.txt (318 Bytes)
‚îú‚îÄ‚îÄ üìÅ core/
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ fsm_builder.py (892 Bytes)
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ message_sender_back.py (7.4 kB)
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ pipeline_executor.py (3.4 kB)
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ table_loader.py (2.2 kB)
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ token_loader.py (1.2 kB)
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ __pycache__/
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ message_sender/
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ __init__.py (608 Bytes)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ base.py (1.7 kB)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ format_detector.py (391 Bytes)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ markup_builder.py (1.6 kB)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ media_sender.py (3.2 kB)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ poll_sender.py (727 Bytes)
‚îÇ       ‚îú‚îÄ‚îÄ üìÑ text_sender.py (1.3 kB)
‚îÇ       ‚îî‚îÄ‚îÄ üìÅ __pycache__/
‚îú‚îÄ‚îÄ üìÅ doc/
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ deepseek_text_20250929_e42670.txt (414 Bytes)
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç.txt (16.6 kB)
‚îú‚îÄ‚îÄ üìÅ handlers/
‚îÇ   ‚îú‚îÄ‚îÄ üìÑ callback_handler.py (871 Bytes)
‚îÇ   ‚îî‚îÄ‚îÄ üìÑ message_handler.py (2.2 kB)
‚îî‚îÄ‚îÄ üìÅ pipeline/
    ‚îú‚îÄ‚îÄ üìÑ __init__.py (576 Bytes)
    ‚îú‚îÄ‚îÄ üìÑ build_message.py (2.6 kB)
    ‚îú‚îÄ‚îÄ üìÑ check_guard.py (772 Bytes)
    ‚îú‚îÄ‚îÄ üìÑ determine_transition.py (422 Bytes)
    ‚îú‚îÄ‚îÄ üìÑ execute_effect.py (767 Bytes)
    ‚îú‚îÄ‚îÄ üìÑ find_row.py (1.3 kB)
    ‚îú‚îÄ‚îÄ üìÑ format_notification.py (869 Bytes)
    ‚îú‚îÄ‚îÄ üìÑ prepare_integration.py (725 Bytes)
    ‚îî‚îÄ‚îÄ üìÅ __pycache__/

üìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –†–ê–°–®–ò–†–ï–ù–ò–Ø–ú:
----------------------------------------
.py      :   25 —Ñ–∞–π–ª–æ–≤
.csv     :    5 —Ñ–∞–π–ª–æ–≤
.txt     :    3 —Ñ–∞–π–ª–æ–≤

üèÜ –°–ê–ú–´–ï –ë–û–õ–¨–®–ò–ï –§–ê–ô–õ–´:
----------------------------------------
–ö—Ä—É–ø–Ω–µ–π—à–∏–π: project_analyzer4.py (17.2 kB)

üïê –í–†–ï–ú–ï–ù–ù–´–ï –ú–ï–¢–ö–ò:
----------------------------------------
–°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π: project_analyzer4.py (2025-09-26)
–°–∞–º—ã–π –Ω–æ–≤—ã–π:  core\message_sender\text_sender.py (2025-09-30)

üìÇ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–ê–ü–ö–ê–ú:
----------------------------------------
pipeline                       :   8 —Ñ–∞–π–ª–æ–≤,     8.1 kB
core\message_sender            :   7 —Ñ–∞–π–ª–æ–≤,     9.6 kB
core                           :   5 —Ñ–∞–π–ª–æ–≤,    15.0 kB
doc                            :   2 —Ñ–∞–π–ª–æ–≤,    17.1 kB
handlers                       :   2 —Ñ–∞–π–ª–æ–≤,     3.1 kB

================================================================================
–°–û–î–ï–†–ñ–ò–ú–û–ï –§–ê–ô–õ–û–í –ü–†–û–ï–ö–¢–ê
================================================================================
–§–ê–ô–õ: 08_core_loop.py
–†–∞–∑–º–µ—Ä: 5.0 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:05

------------------------------------------------------------
#!/usr/bin/env python3
import asyncio
import sys
from pathlib import Path

from aiogram import Bot, Dispatcher, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command

# –ú–∏–∫—Ä–æ-–∏–º–ø–æ—Ä—Ç—ã
from core.token_loader import load_bot_token
from core.table_loader import load_table
from core.fsm_builder import extract_states_from_table, create_fsm_from_states

# –°—Ç–∞—Ä—ã–π –∏–º–ø–æ—Ä—Ç:
# from core.message_sender import send_message_by_content

# –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç:
from core.message_sender import *

from pipeline import *

async def handle_message(msg: types.Message, state: FSMContext, table_path, DynFSM, bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ pipeline —Ñ—É–Ω–∫—Ü–∏–π"""
    try:
        data = await state.get_data()
        current_state = data.get("current_state", "start")
        payload = {"current_state": current_state, "text": msg.text}
        
        print(f"üì• –í—Ö–æ–¥: state={current_state!r}, text={msg.text!r}")

        # Pipeline –≤—ã–∑–æ–≤–æ–≤
        row = find_row(table_path, current_state, msg.text)
        skip = check_guard(row, payload, current_state) if row else False
        
        if row and not skip:
            execute_effect(row, payload)
        
        message_content = build_message_content(row, payload)
        integration = prepare_integration(row) if row else None
        next_state = determine_transition(row, skip)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if message_content:
            await send_message_by_content(bot, msg.chat.id, message_content)
        
        if integration:
            print(f"üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration}")
        
        if next_state and hasattr(DynFSM, next_state):
            await state.set_state(getattr(DynFSM, next_state))
            await state.update_data(current_state=next_state)
            print(f"üîÑ –ü–µ—Ä–µ—Ö–æ–¥: {current_state!r} ‚Üí {next_state!r}")
        elif not row:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot.send_message –≤–º–µ—Å—Ç–æ msg.answer –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å fake_message
            await bot.send_message(msg.chat.id, "‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")

    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        await bot.send_message(msg.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û


async def handle_callback(callback: types.CallbackQuery, state: FSMContext, table_path, DynFSM, bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏"""
    # –°–æ–∑–¥–∞–µ–º fake-message –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
    fake_message = types.Message(
        message_id=callback.message.message_id,
        from_user=callback.from_user,
        chat=callback.message.chat,  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: callback.message.chat
        date=callback.message.date,
        text=callback.data  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_data –∫–∞–∫ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await handle_message(fake_message, state, table_path, DynFSM, bot)
    await callback.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ

async def main():
    TABLE_FILE = sys.argv[1] if len(sys.argv) > 1 else "table.csv"
    table_path = Path(TABLE_FILE)
    
    if not table_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {TABLE_FILE}")
        return

    token = load_bot_token()
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    # –ó–∞–≥—Ä—É–∑–∫–∞ FSM
    rows = load_table(TABLE_FILE)
    states_found = extract_states_from_table(rows)
    DynFSM = create_fsm_from_states(states_found)
    print(f"üß† –°–æ–∑–¥–∞–Ω–æ {len(states_found)} —Å–æ—Å—Ç–æ—è–Ω–∏–π")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
    dp = Dispatcher(storage=MemoryStorage())
    bot = Bot(token)

    # –•–µ–Ω–¥–ª–µ—Ä—ã
    @dp.message(Command("start", "reset"))
    async def start_handler(msg: types.Message, state: FSMContext):
        await state.set_data({"current_state": "start"})
        if msg.text == "/reset":
            await msg.answer("üîÑ –ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω")
        await handle_message(msg, state, table_path, DynFSM, bot)

    @dp.message()
    async def message_handler(msg: types.Message, state: FSMContext):
        await handle_message(msg, state, table_path, DynFSM, bot)

    @dp.callback_query()
    async def callback_handler(callback: types.CallbackQuery, state: FSMContext):
        await handle_callback(callback, state, table_path, DynFSM, bot)

    # –ó–∞–ø—É—Å–∫
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
    finally:
        await bot.session.close()
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    asyncio.run(main())

================================================================================
–§–ê–ô–õ: create_test_media.py
–†–∞–∑–º–µ—Ä: 959 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:15

------------------------------------------------------------
#!/usr/bin/env python3
from PIL import Image
import os

def create_test_media():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = Image.new('RGB', (400, 300), color='red')
    img.save('test_image.jpg')
    print("‚úÖ –°–æ–∑–¥–∞–Ω test_image.jpg")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF
    with open('test_document.pdf', 'w') as f:
        f.write("This is a test PDF document\n")
        f.write("Test content for document testing\n")
    print("‚úÖ –°–æ–∑–¥–∞–Ω test_document.pdf")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–∏–¥–µ–æ—Ñ–∞–π–ª (–ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .mp4)
    with open('test_video.mp4', 'w') as f:
        f.write("This would be a video file in real scenario\n")
    print("‚úÖ –°–æ–∑–¥–∞–Ω test_video.mp4 (–∑–∞–≥–ª—É—à–∫–∞)")

if __name__ == "__main__":
    create_test_media()

================================================================================
–§–ê–ô–õ: project_analyzer4.py
–†–∞–∑–º–µ—Ä: 17.2 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-26 23:16

------------------------------------------------------------
import os
import argparse
from pathlib import Path
from datetime import datetime
import humanize

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_EXTENSIONS = ['.py', '.md', '.txt', '.csv']
EXCLUDED_FILES = ['project_overview.txt', '.gitignore', 'temp.txt']

def get_output_filename(base_name="project_overview"):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π."""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    return f"{base_name}_{timestamp}.txt"

def is_excluded_output_file(filename):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏—Ç–æ–≥–æ–≤—ã–º –æ—Ç—á–µ—Ç–æ–º."""
    return (filename.startswith("project_overview_") and 
            filename.endswith(".txt") and
            len(filename) > len("project_overview_XXXXXX.txt"))

def should_include_file(file_path, included_extensions):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –≤–∫–ª—é—á–∞—Ç—å —Ñ–∞–π–ª –≤ –∞–Ω–∞–ª–∏–∑."""
    file_path = Path(file_path)
    
    # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
    if any(part.startswith('.') for part in file_path.parts):
        return False
    
    # –ò—Å–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    if file_path.name in EXCLUDED_FILES:
        return False
    
    # –ò—Å–∫–ª—é—á–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
    if is_excluded_output_file(file_path.name):
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    if file_path.suffix.lower() not in included_extensions:
        return False
    
    return True

def get_file_info(file_path):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ (—Ä–∞–∑–º–µ—Ä, –≤—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è)."""
    try:
        stat = file_path.stat()
        return {
            'size': stat.st_size,
            'mtime': stat.st_mtime,
            'size_str': humanize.naturalsize(stat.st_size),
            'mtime_str': datetime.fromtimestamp(stat.st_mtime).strftime('%Y-%m-%d %H:%M')
        }
    except OSError:
        return None

def read_file_content(file_path):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫."""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –∫–æ–Ω—Ü–µ
            if content and not content.endswith('\n'):
                content += '\n'
            return content
    except UnicodeDecodeError:
        return "!!! –ù–ï–í–û–ó–ú–û–ñ–ù–û –ü–†–û–ß–ò–¢–ê–¢–¨ (–±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞)\n"
    except Exception as e:
        return f"!!! –û–®–ò–ë–ö–ê –ü–†–ò –ß–¢–ï–ù–ò–ò: {e}\n"

def get_directory_tree(project_path, included_extensions):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞."""
    project_path = Path(project_path)
    tree_lines = []
    file_count = 0

    def build_tree(directory, prefix=""):
        nonlocal file_count
        contents = []
        try:
            contents = sorted(os.listdir(directory))
        except PermissionError:
            return [f"{prefix}‚îî‚îÄ‚îÄ ‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞"]

        files = []
        dirs = []

        for item in contents:
            item_path = directory / item
            if item_path.is_dir():
                if not item.startswith('.'):  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–∞–ø–∫–∏
                    dirs.append(item)
            else:
                if should_include_file(item_path, included_extensions):
                    files.append(item)

        # –°–Ω–∞—á–∞–ª–∞ —Ñ–∞–π–ª—ã, –ø–æ—Ç–æ–º –ø–∞–ø–∫–∏
        items = files + dirs
        tree = []

        for i, item in enumerate(items):
            is_last = i == len(items) - 1
            item_path = directory / item

            if item_path.is_file():
                # –≠—Ç–æ —Ñ–∞–π–ª
                file_count += 1
                file_info = get_file_info(item_path)
                if file_info:
                    tree.append(f"{prefix}{'‚îî‚îÄ‚îÄ ' if is_last else '‚îú‚îÄ‚îÄ '}üìÑ {item} ({file_info['size_str']})")
                else:
                    tree.append(f"{prefix}{'‚îî‚îÄ‚îÄ ' if is_last else '‚îú‚îÄ‚îÄ '}üìÑ {item} (‚ö†Ô∏è)")
            else:
                # –≠—Ç–æ –ø–∞–ø–∫–∞
                tree.append(f"{prefix}{'‚îî‚îÄ‚îÄ ' if is_last else '‚îú‚îÄ‚îÄ '}üìÅ {item}/")
                extension = "    " if is_last else "‚îÇ   "
                tree.extend(build_tree(item_path, prefix + extension))

        return tree

    tree_lines.append("üå≥ –î–†–ï–í–û–í–ò–î–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:")
    tree_lines.append(".")
    tree_lines.extend(build_tree(project_path))
    tree_lines.append("")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è

    return tree_lines, file_count

def calculate_project_stats(project_path, included_extensions):
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É."""
    project_path = Path(project_path)
    stats = {
        'total_files': 0,
        'total_folders': 0,
        'files_by_extension': {},
        'files_by_folder': {},
        'total_size': 0,
        'largest_file': {'path': None, 'size': 0},
        'oldest_file': {'path': None, 'mtime': float('inf')},
        'newest_file': {'path': None, 'mtime': 0},
        'folder_structure': {}
    }

    for root, dirs, files in os.walk(project_path):
        # –£–±–∏—Ä–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–∞–ø–∫–∏ –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        dirs[:] = [d for d in dirs if not d.startswith('.')]

        current_folder = Path(root).relative_to(project_path)
        stats['total_folders'] += 1

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–∞–π–ª–∞–º –≤ –ø–∞–ø–∫–µ
        folder_files_count = 0
        folder_size = 0

        for file in files:
            file_path = Path(root) / file
            
            if not should_include_file(file_path, included_extensions):
                continue

            file_info = get_file_info(file_path)
            if not file_info:
                continue

            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            stats['total_files'] += 1
            stats['total_size'] += file_info['size']

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
            ext = file_path.suffix.lower()
            stats['files_by_extension'][ext] = stats['files_by_extension'].get(ext, 0) + 1

            # –°–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª
            if file_info['size'] > stats['largest_file']['size']:
                stats['largest_file'] = {'path': file_path.relative_to(project_path), 'size': file_info['size']}

            # –°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π —Ñ–∞–π–ª
            if file_info['mtime'] < stats['oldest_file']['mtime']:
                stats['oldest_file'] = {'path': file_path.relative_to(project_path), 'mtime': file_info['mtime']}
            if file_info['mtime'] > stats['newest_file']['mtime']:
                stats['newest_file'] = {'path': file_path.relative_to(project_path), 'mtime': file_info['mtime']}

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–∞–ø–∫–∞–º
            folder_files_count += 1
            folder_size += file_info['size']

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
        if current_folder != Path('.'):
            stats['files_by_folder'][str(current_folder)] = {
                'file_count': folder_files_count,
                'total_size': folder_size
            }

    return stats

def format_stats_table(stats, project_path, tree_lines):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –≤–∏–¥–µ —á–∏—Ç–∞–µ–º—ã—Ö —Ç–∞–±–ª–∏—Ü."""
    lines = []
    lines.append("=" * 80)
    lines.append("–î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ï–ö–¢–ê")
    lines.append("=" * 80)
    lines.append(f"–ü—Ä–æ–µ–∫—Ç: {project_path.name}")
    lines.append(f"–ü—É—Ç—å: {project_path.absolute()}")
    lines.append(f"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    lines.append(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {humanize.naturalsize(stats['total_size'])}")
    lines.append(f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {stats['total_files']}")
    lines.append(f"–í—Å–µ–≥–æ –ø–∞–ø–æ–∫: {stats['total_folders']}")
    lines.append("")

    # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    lines.extend(tree_lines)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º —Ñ–∞–π–ª–æ–≤
    if stats['files_by_extension']:
        lines.append("üìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –†–ê–°–®–ò–†–ï–ù–ò–Ø–ú:")
        lines.append("-" * 40)
        for ext, count in sorted(stats['files_by_extension'].items(), key=lambda x: x[1], reverse=True):
            lines.append(f"{ext:8} : {count:4d} —Ñ–∞–π–ª–æ–≤")
        lines.append("")

    # –ö—Ä—É–ø–Ω–µ–π—à–∏–µ —Ñ–∞–π–ª—ã
    if stats['largest_file']['path']:
        lines.append("üèÜ –°–ê–ú–´–ï –ë–û–õ–¨–®–ò–ï –§–ê–ô–õ–´:")
        lines.append("-" * 40)
        lines.append(f"–ö—Ä—É–ø–Ω–µ–π—à–∏–π: {stats['largest_file']['path']} ({humanize.naturalsize(stats['largest_file']['size'])})")
        lines.append("")

    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    if stats['oldest_file']['path']:
        lines.append("üïê –í–†–ï–ú–ï–ù–ù–´–ï –ú–ï–¢–ö–ò:")
        lines.append("-" * 40)
        oldest_time = datetime.fromtimestamp(stats['oldest_file']['mtime'])
        newest_time = datetime.fromtimestamp(stats['newest_file']['mtime'])
        lines.append(f"–°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π: {stats['oldest_file']['path']} ({oldest_time.strftime('%Y-%m-%d')})")
        lines.append(f"–°–∞–º—ã–π –Ω–æ–≤—ã–π:  {stats['newest_file']['path']} ({newest_time.strftime('%Y-%m-%d')})")
        lines.append("")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–∞–ø–∫–∞–º (—Ç–æ–ª—å–∫–æ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏)
    if stats['files_by_folder']:
        lines.append("üìÇ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–ê–ü–ö–ê–ú:")
        lines.append("-" * 40)
        sorted_folders = sorted(stats['files_by_folder'].items(),
                               key=lambda x: x[1]['file_count'], reverse=True)

        for folder, data in sorted_folders:
            if data['file_count'] > 0:
                size_str = humanize.naturalsize(data['total_size'])
                lines.append(f"{folder:<30} : {data['file_count']:3d} —Ñ–∞–π–ª–æ–≤, {size_str:>10}")
        lines.append("")

    lines.append("=" * 80)
    lines.append("")
    return "\n".join(lines)

def create_project_overview(project_path, output_file=None, included_extensions=None):
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—â–∏–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º –∫–æ–¥–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã."""
    if included_extensions is None:
        included_extensions = DEFAULT_EXTENSIONS
        
    if output_file is None:
        output_file = get_output_filename()

    project_path = Path(project_path)
    output_file = Path(output_file)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
    if not project_path.exists():
        print(f"‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ '{project_path}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return False
    if not project_path.is_dir():
        print(f"‚ùå –û—à–∏–±–∫–∞: '{project_path}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π!")
        return False

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("üå≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
    tree_lines, tree_file_count = get_directory_tree(project_path, included_extensions)

    # –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\n".join(tree_lines))
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: {tree_file_count}")
    print("-" * 50)

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("üìä –°–±–æ—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    stats = calculate_project_stats(project_path, included_extensions)

    separator = "\n" + "=" * 80 + "\n"
    file_separator = "\n" + "-" * 60 + "\n"

    try:
        with open(output_file, 'w', encoding='utf-8') as outfile:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats_text = format_stats_table(stats, project_path, tree_lines)
            outfile.write(stats_text)

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            outfile.write("–°–û–î–ï–†–ñ–ò–ú–û–ï –§–ê–ô–õ–û–í –ü–†–û–ï–ö–¢–ê")
            outfile.write(separator)

            # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            files_processed = 0
            for file_path in project_path.rglob('*'):
                if (file_path.is_file() and 
                    should_include_file(file_path, included_extensions)):

                    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–∞–π–ª–∞
                    relative_path = file_path.relative_to(project_path)
                    file_info = get_file_info(file_path)
                    
                    outfile.write(f"–§–ê–ô–õ: {relative_path}\n")
                    if file_info:
                        outfile.write(f"–†–∞–∑–º–µ—Ä: {file_info['size_str']}\n")
                        outfile.write(f"–ò–∑–º–µ–Ω–µ–Ω: {file_info['mtime_str']}\n")
                    else:
                        outfile.write("–†–∞–∑–º–µ—Ä: N/A\n")
                        outfile.write("–ò–∑–º–µ–Ω–µ–Ω: N/A\n")
                    outfile.write(file_separator)

                    # –ß–∏—Ç–∞–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                    content = read_file_content(file_path)
                    outfile.write(content)

                    outfile.write(separator)
                    files_processed += 1

            # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            outfile.write(f"–ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù.\n")
            outfile.write(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_processed}\n")
            outfile.write(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {humanize.naturalsize(stats['total_size'])}\n")
            outfile.write(f"–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")

        print(f"‚úÖ –û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω: {output_file.absolute()}")
        print(f"üì¶ –†–∞–∑–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞: {humanize.naturalsize(output_file.stat().st_size)}")
        print(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_processed}")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤."""
    try:
        import humanize
    except ImportError:
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ 'humanize'")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install humanize")
        return

    parser = argparse.ArgumentParser(
        description='–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–∑–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ò–ò-–∞–Ω–∞–ª–∏–∑–∞',
        epilog='–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n'
               '  python project_analyzer.py                 # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏\n'
               '  python project_analyzer.py /–ø—É—Ç—å/–∫/–ø—Ä–æ–µ–∫—Ç—É # –ê–Ω–∞–ª–∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏\n'
               '  python project_analyzer.py -e .py .json .txt -o –æ—Ç—á–µ—Ç.txt',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )

    parser.add_argument('project_path', nargs='?', default='.',
                       help='–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ç–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞)')
    parser.add_argument('-o', '--output', 
                       help='–ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π)')
    parser.add_argument('-e', '--extensions', nargs='+', default=DEFAULT_EXTENSIONS,
                       help='–†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: .py .md .txt)')

    args = parser.parse_args()

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
    if args.output is None:
        args.output = get_output_filename()

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –ø—É—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É)
    project_path = Path(args.project_path).absolute()

    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞...")
    print(f"üìÅ –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: {project_path}")
    print(f"üìÑ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {args.output}")
    print(f"üîç –†–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(args.extensions)}")
    print("-" * 50)

    success = create_project_overview(
        project_path=project_path,
        output_file=args.output,
        included_extensions=args.extensions
    )

    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.")
    else:
        print("‚ùå –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏.")

if __name__ == "__main__":
    main()

================================================================================
–§–ê–ô–õ: table.csv
–†–∞–∑–º–µ—Ä: 11.8 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:40

------------------------------------------------------------
process_name,from_state,to_state,command,condition,message_text,caption,media_file,reply_markup,inline_markup,notification,integrations,result_action
TestBot,start,menu,/start,,–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,text_test,üìù –¢–µ–∫—Å—Ç,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏.,,,–ù–∞–∑–∞–¥,,,,
TestBot,text_test,menu,–ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,media_test,üñºÔ∏è –ú–µ–¥–∏–∞,,–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ–¥–∏–∞:,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,media_test,photo_test,üñºÔ∏è –§–æ—Ç–æ,,,–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é,test_image.jpg,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,document_test,üìÑ –î–æ–∫—É–º–µ–Ω—Ç,,,–ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞,test_document.pdf,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,video_test,üé• –í–∏–¥–µ–æ,,,–ü—Ä–∏–º–µ—Ä –≤–∏–¥–µ–æ,test_video.mp4,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,photo_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,document_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,video_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,menu,buttons_test,üìã –ö–Ω–æ–ø–∫–∏,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫:,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,reply_buttons,üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:,,,"–ö–Ω–æ–ø–∫–∞ 1|–ö–Ω–æ–ø–∫–∞ 2|–ö–Ω–æ–ø–∫–∞ 3|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,inline_buttons,üîò Inline –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:confirm|–û—Ç–º–µ–Ω–∞:cancel|–ò–Ω—Ñ–æ:info",,
TestBot,buttons_test,special_buttons,üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏:,,,"üìç –õ–æ–∫–∞—Ü–∏—è|üì± –ö–æ–Ω—Ç–∞–∫—Ç|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,reply_buttons,button_action,<text>,,–í—ã –Ω–∞–∂–∞–ª–∏: {text},,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,confirm,,–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,cancel,,–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,info,,–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,special_buttons,location_sent,üìç –õ–æ–∫–∞—Ü–∏—è,,–°–ø–∞—Å–∏–±–æ –∑–∞ –ª–æ–∫–∞—Ü–∏—é!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,special_buttons,contact_sent,üì± –ö–æ–Ω—Ç–∞–∫—Ç,,–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,button_action,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,inline_result,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,contact_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,poll_test,üìä –û–ø—Ä–æ—Å,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å—ã:,,,"‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞|üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_test,rating_poll,‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞,,–û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –±–æ—Ç–∞:,,,,,"1‚≠ê,2‚≠ê,3‚≠ê,4‚≠ê,5‚≠ê",
TestBot,poll_test,voting_poll,üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ,,–í—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à—É—é —Ñ—É–Ω–∫—Ü–∏—é:,,,,,"–ö–Ω–æ–ø–∫–∏,–ú–µ–¥–∏–∞,–û–ø—Ä–æ—Å—ã,–õ–æ–∫–∞—Ü–∏–∏",
TestBot,rating_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,voting_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,location_test,üìç –õ–æ–∫–∞—Ü–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –ª–æ–∫–∞—Ü–∏–µ–π:,,,"üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_test,location_request,üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é,,–ó–∞–ø—Ä–æ—Å –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏:,,,,,,
TestBot,location_request,location_received,<text>,not_empty:location,–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞.,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,location_received,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,location_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,advanced_test,üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,guard_test,üõ°Ô∏è –£—Å–ª–æ–≤–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º guard-—É—Å–ª–æ–≤–∏—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,guard_test,guard_success,<text>,not_empty:text,–£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text},,,–î–∞–ª–µ–µ,,,,
TestBot,guard_test,guard_failed,<text>,,–£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (—Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π),,,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,,,
TestBot,guard_success,effect_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º side-effect –¥–µ–π—Å—Ç–≤–∏—è:,,,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,,,
TestBot,effect_test,effect_done,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞.,,,save:test_field:test_value,,,,
TestBot,effect_done,integration_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:,,,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,,,
TestBot,integration_test,integration_done,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.,,,,,"http:POST https://jsonplaceholder.typicode.com/posts",
TestBot,integration_done,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,guard_failed,advanced_test,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,–í–æ–∑–≤—Ä–∞—Ç –∫ —Ç–µ—Å—Ç—É —É—Å–ª–æ–≤–∏–π,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,format_test,üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,html_test,HTML,,<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ö—É—Ä—Å–∏–≤</i>\n<u>–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</u>\n<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π</code>,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,markdown_test,Markdown,,**–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**\n*–ö—É—Ä—Å–∏–≤*\n__–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ__\n`–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π`,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,emoji_test,–≠–º–æ–¥–∑–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏: üöÄ‚ú®üéâ\n–†–∞–∑–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\nüòÇ –°–º–µ—Ö\nüìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n‚öΩ –°–ø–æ—Ä—Ç\nüçï –ï–¥–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,html_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,markdown_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,emoji_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,mixed_test,üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,photo_buttons,üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏,,,–§–æ—Ç–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π,test_image.jpg,"üëç –ù—Ä–∞–≤–∏—Ç—Å—è|üëé –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è|üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,poll_inline,üìä –û–ø—Ä–æ—Å+Inline,,–û–ø—Ä–æ—Å —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,,,"–í–∞—Ä–∏–∞–Ω—Ç A,–í–∞—Ä–∏–∞–Ω—Ç B,–í–∞—Ä–∏–∞–Ω—Ç C","üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:results|üîÑ –ù–æ–≤—ã–π –æ–ø—Ä–æ—Å:new_poll",
TestBot,photo_buttons,mixed_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_inline,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,mixed_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,reset,/reset,,–ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.,,,/start,,,,

================================================================================
–§–ê–ô–õ: table_final.csv
–†–∞–∑–º–µ—Ä: 11.9 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:11

------------------------------------------------------------
process_name,from_state,to_state,command,condition,message_text,caption,media_file,reply_markup,inline_markup,notification,integrations,result_action
TestBot,start,menu,/start,,–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,text_test,üìù –¢–µ–∫—Å—Ç,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏.,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,text_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,media_test,üñºÔ∏è –ú–µ–¥–∏–∞,,–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ–¥–∏–∞:,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,media_test,photo_test,üñºÔ∏è –§–æ—Ç–æ,,,–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é,test_image.jpg,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,document_test,üìÑ –î–æ–∫—É–º–µ–Ω—Ç,,,–ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞,test_document.pdf,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,video_test,üé• –í–∏–¥–µ–æ,,,–ü—Ä–∏–º–µ—Ä –≤–∏–¥–µ–æ,test_video.mp4,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,photo_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,document_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,video_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,menu,buttons_test,üìã –ö–Ω–æ–ø–∫–∏,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫:,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,reply_buttons,üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:,,,"–ö–Ω–æ–ø–∫–∞ 1|–ö–Ω–æ–ø–∫–∞ 2|–ö–Ω–æ–ø–∫–∞ 3|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,inline_buttons,üîò Inline –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:confirm|–û—Ç–º–µ–Ω–∞:cancel|–ò–Ω—Ñ–æ:info",,
TestBot,buttons_test,special_buttons,üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏:,,,"üìç –õ–æ–∫–∞—Ü–∏—è|üì± –ö–æ–Ω—Ç–∞–∫—Ç|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,reply_buttons,button_action,<text>,,–í—ã –Ω–∞–∂–∞–ª–∏: {text},,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,confirm,,–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,cancel,,–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,info,,–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,special_buttons,location_sent,üìç –õ–æ–∫–∞—Ü–∏—è,,–°–ø–∞—Å–∏–±–æ –∑–∞ –ª–æ–∫–∞—Ü–∏—é!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,special_buttons,contact_sent,üì± –ö–æ–Ω—Ç–∞–∫—Ç,,–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,button_action,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,inline_result,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,contact_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,poll_test,üìä –û–ø—Ä–æ—Å,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å—ã:,,,"‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞|üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_test,rating_poll,‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞,,–û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –±–æ—Ç–∞:,,,,,"1‚≠ê,2‚≠ê,3‚≠ê,4‚≠ê,5‚≠ê",
TestBot,poll_test,voting_poll,üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ,,–í—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à—É—é —Ñ—É–Ω–∫—Ü–∏—é:,,,,,"–ö–Ω–æ–ø–∫–∏,–ú–µ–¥–∏–∞,–û–ø—Ä–æ—Å—ã,–õ–æ–∫–∞—Ü–∏–∏",
TestBot,rating_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,voting_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,location_test,üìç –õ–æ–∫–∞—Ü–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –ª–æ–∫–∞—Ü–∏–µ–π:,,,"üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_test,location_request,üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é,,–ó–∞–ø—Ä–æ—Å –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏:,,,,,,
TestBot,location_request,location_received,<text>,not_empty:location,–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞.,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,location_received,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,location_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,advanced_test,üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,guard_test,üõ°Ô∏è –£—Å–ª–æ–≤–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º guard-—É—Å–ª–æ–≤–∏—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,guard_test,guard_success,<text>,not_empty:text,–£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text},,,–î–∞–ª–µ–µ,,,,
TestBot,guard_test,guard_failed,<text>,,–£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (—Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π),,,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,,,
TestBot,guard_success,effect_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º side-effect –¥–µ–π—Å—Ç–≤–∏—è:,,,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,,,
TestBot,effect_test,effect_done,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞.,,,save:test_field:test_value,,,,
TestBot,effect_done,integration_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:,,,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,,,
TestBot,integration_test,integration_done,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.,,,,,"http:POST https://jsonplaceholder.typicode.com/posts",
TestBot,integration_done,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,guard_failed,advanced_test,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,–í–æ–∑–≤—Ä–∞—Ç –∫ —Ç–µ—Å—Ç—É —É—Å–ª–æ–≤–∏–π,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,format_test,üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,html_test,HTML,,<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ö—É—Ä—Å–∏–≤</i>\n<u>–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</u>\n<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π</code>,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,markdown_test,Markdown,,**–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**\n*–ö—É—Ä—Å–∏–≤*\n__–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ__\n`–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π`,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,emoji_test,–≠–º–æ–¥–∑–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏: üöÄ‚ú®üéâ\n–†–∞–∑–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\nüòÇ –°–º–µ—Ö\nüìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n‚öΩ –°–ø–æ—Ä—Ç\nüçï –ï–¥–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,html_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,markdown_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,emoji_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,mixed_test,üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,photo_buttons,üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏,,,–§–æ—Ç–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π,test_image.jpg,"üëç –ù—Ä–∞–≤–∏—Ç—Å—è|üëé –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è|üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,poll_inline,üìä –û–ø—Ä–æ—Å+Inline,,–û–ø—Ä–æ—Å —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,,,"–í–∞—Ä–∏–∞–Ω—Ç A,–í–∞—Ä–∏–∞–Ω—Ç B,–í–∞—Ä–∏–∞–Ω—Ç C","üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:results|üîÑ –ù–æ–≤—ã–π –æ–ø—Ä–æ—Å:new_poll",
TestBot,photo_buttons,mixed_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_inline,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,mixed_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,reset,/reset,,–ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.,,,/start,,,,

================================================================================
–§–ê–ô–õ: table_fixed.csv
–†–∞–∑–º–µ—Ä: 11.9 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:07

------------------------------------------------------------
process_name,from_state,to_state,command,condition,message_text,caption,media_file,reply_markup,inline_markup,notification,integrations,result_action
TestBot,start,menu,/start,,–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,text_test,üìù –¢–µ–∫—Å—Ç,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏.,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,text_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,media_test,üñºÔ∏è –ú–µ–¥–∏–∞,,–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ–¥–∏–∞:,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,media_test,photo_test,üñºÔ∏è –§–æ—Ç–æ,,,–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é,test_image.jpg,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,document_test,üìÑ –î–æ–∫—É–º–µ–Ω—Ç,,,–ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞,test_document.pdf,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,video_test,üé• –í–∏–¥–µ–æ,,,–ü—Ä–∏–º–µ—Ä –≤–∏–¥–µ–æ,test_video.mp4,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,media_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,photo_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,document_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,video_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,menu,buttons_test,üìã –ö–Ω–æ–ø–∫–∏,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫:,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,reply_buttons,üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:,,,"–ö–Ω–æ–ø–∫–∞ 1|–ö–Ω–æ–ø–∫–∞ 2|–ö–Ω–æ–ø–∫–∞ 3|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,inline_buttons,üîò Inline –∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:confirm|–û—Ç–º–µ–Ω–∞:cancel|–ò–Ω—Ñ–æ:info",,
TestBot,buttons_test,special_buttons,üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏:,,,"üìç –õ–æ–∫–∞—Ü–∏—è|üì± –ö–æ–Ω—Ç–∞–∫—Ç|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,reply_buttons,button_action,<text>,,–í—ã –Ω–∞–∂–∞–ª–∏: {text},,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,inline_buttons,inline_result,confirm,,–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,inline_buttons,inline_result,cancel,,–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,inline_buttons,inline_result,info,,–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,special_buttons,location_sent,üìç –õ–æ–∫–∞—Ü–∏—è,,–°–ø–∞—Å–∏–±–æ –∑–∞ –ª–æ–∫–∞—Ü–∏—é!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,special_buttons,contact_sent,üì± –ö–æ–Ω—Ç–∞–∫—Ç,,–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç!,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,button_action,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,inline_result,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,contact_sent,buttons_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫,,,"üëÜ –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|üîò Inline –∫–Ω–æ–ø–∫–∏|üìç –°–ø–µ—Ü-–∫–Ω–æ–ø–∫–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,buttons_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,poll_test,üìä –û–ø—Ä–æ—Å,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å—ã:,,,"‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞|üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_test,rating_poll,‚≠ê –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞,,–û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –±–æ—Ç–∞:,,,,,"1‚≠ê,2‚≠ê,3‚≠ê,4‚≠ê,5‚≠ê",
TestBot,poll_test,voting_poll,üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ,,–í—ã–±–µ—Ä–∏—Ç–µ –ª—É—á—à—É—é —Ñ—É–Ω–∫—Ü–∏—é:,,,,,"–ö–Ω–æ–ø–∫–∏,–ú–µ–¥–∏–∞,–û–ø—Ä–æ—Å—ã,–õ–æ–∫–∞—Ü–∏–∏",
TestBot,rating_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,voting_poll,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,location_test,üìç –õ–æ–∫–∞—Ü–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –ª–æ–∫–∞—Ü–∏–µ–π:,,,"üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,location_test,location_request,üìç –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é,,–ó–∞–ø—Ä–æ—Å –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏:,,,,,,
TestBot,location_request,location_received,<text>,not_empty:location,–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞.,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,location_received,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,location_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,advanced_test,üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,guard_test,üõ°Ô∏è –£—Å–ª–æ–≤–∏—è,,–¢–µ—Å—Ç–∏—Ä—É–µ–º guard-—É—Å–ª–æ–≤–∏—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,guard_test,guard_success,<text>,not_empty:text,–£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {text},,,–î–∞–ª–µ–µ,,,,
TestBot,guard_test,guard_failed,<text>,,–£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (—Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π),,,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,,,
TestBot,guard_success,effect_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º side-effect –¥–µ–π—Å—Ç–≤–∏—è:,,,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,,,
TestBot,effect_test,effect_done,–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ,,–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞.,,,save:test_field:test_value,,,,
TestBot,effect_done,integration_test,–î–∞–ª–µ–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:,,,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,,,
TestBot,integration_test,integration_done,–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é,,–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.,,,,,"http:POST https://jsonplaceholder.typicode.com/posts",
TestBot,integration_done,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,guard_failed,advanced_test,–ü–æ–≤—Ç–æ—Ä–∏—Ç—å,,–í–æ–∑–≤—Ä–∞—Ç –∫ —Ç–µ—Å—Ç—É —É—Å–ª–æ–≤–∏–π,,,"üõ°Ô∏è –£—Å–ª–æ–≤–∏—è|‚ö° –î–µ–π—Å—Ç–≤–∏—è|üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,advanced_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,format_test,üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,html_test,HTML,,<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ö—É—Ä—Å–∏–≤</i>\n<u>–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</u>\n<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π</code>,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,markdown_test,Markdown,,**–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**\n*–ö—É—Ä—Å–∏–≤*\n__–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ__\n`–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π`,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,format_test,emoji_test,–≠–º–æ–¥–∑–∏,,–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏: üöÄ‚ú®üéâ\n–†–∞–∑–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\nüòÇ –°–º–µ—Ö\nüìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n‚öΩ –°–ø–æ—Ä—Ç\nüçï –ï–¥–∞,,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,,
TestBot,html_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,markdown_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,emoji_test,format_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,,,"HTML|Markdown|–≠–º–æ–¥–∑–∏|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,format_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,mixed_test,üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π,,–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ—à–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,photo_buttons,üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏,,,–§–æ—Ç–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π,test_image.jpg,"üëç –ù—Ä–∞–≤–∏—Ç—Å—è|üëé –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è|üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,mixed_test,poll_inline,üìä –û–ø—Ä–æ—Å+Inline,,–û–ø—Ä–æ—Å —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏:,,,,,"–í–∞—Ä–∏–∞–Ω—Ç A,–í–∞—Ä–∏–∞–Ω—Ç B,–í–∞—Ä–∏–∞–Ω—Ç C","üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:results|üîÑ –ù–æ–≤—ã–π –æ–ø—Ä–æ—Å:new_poll",
TestBot,photo_buttons,mixed_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞,,,"üì∏ –§–æ—Ç–æ+–ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å+Inline|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,poll_inline,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,mixed_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,reset,/reset,,–ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.,,,/start,,,,

================================================================================
–§–ê–ô–õ: table_pizza.csv
–†–∞–∑–º–µ—Ä: 737 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:19

------------------------------------------------------------
process_name,from_state,to_state,command,message_text,reply_markup,inline_markup,notification
PizzaOrder,start,menu,/start,"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:","üçï –ó–∞–∫–∞–∑–∞—Ç—å|üìã –ú–µ–Ω—é|üè™ –û –Ω–∞—Å",,,
PizzaOrder,menu,size,üçï –ó–∞–∫–∞–∑–∞—Ç—å,"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã:","30 —Å–º|40 —Å–º|50 —Å–º",,,
PizzaOrder,size,toppings,<text>,"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø–ø–∏–Ω–≥–∏:",,"üßÄ –°—ã—Ä:cheese|üçÑ –ì—Ä–∏–±—ã:mushrooms","–í—ã–±—Ä–∞–Ω–æ: {text}"
PizzaOrder,toppings,address,‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å,"–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:",,,,
PizzaOrder,address,finish,<text>,,"üìç –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–¥—Ä–µ—Å",,"–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ê–¥—Ä–µ—Å: {text}"

================================================================================
–§–ê–ô–õ: table_urls.csv
–†–∞–∑–º–µ—Ä: 2.0 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:16

------------------------------------------------------------
process_name,from_state,to_state,command,condition,message_text,caption,media_file,reply_markup,inline_markup,notification,integrations,result_action
TestBot,start,menu,/start,,–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,menu,media_test,üñºÔ∏è –ú–µ–¥–∏–∞,,–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ–¥–∏–∞:,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,media_test,photo_test,üñºÔ∏è –§–æ—Ç–æ,,,–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é,https://picsum.photos/400/300,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,media_test,document_test,üìÑ –î–æ–∫—É–º–µ–Ω—Ç,,,–ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞,https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,media_test,video_test,üé• –í–∏–¥–µ–æ,,,–ü—Ä–∏–º–µ—Ä –≤–∏–¥–µ–æ,https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4,,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,,
TestBot,media_test,menu,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,,,"üìù –¢–µ–∫—Å—Ç|üñºÔ∏è –ú–µ–¥–∏–∞|üìã –ö–Ω–æ–ø–∫–∏|üìä –û–ø—Ä–æ—Å|üìç –õ–æ–∫–∞—Ü–∏—è|üéõÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ|üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ|üîÄ –°–º–µ—à–∞–Ω–Ω—ã–π",,,
TestBot,photo_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,document_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
TestBot,video_test,media_test,‚¨ÖÔ∏è –ù–∞–∑–∞–¥,,–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –º–µ–¥–∏–∞,,,"üñºÔ∏è –§–æ—Ç–æ|üìÑ –î–æ–∫—É–º–µ–Ω—Ç|üé• –í–∏–¥–µ–æ|‚¨ÖÔ∏è –ù–∞–∑–∞–¥",,,
# ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–∫–∏–º–∏ –∂–µ

================================================================================
–§–ê–ô–õ: –∞—Ä—Ö.txt
–†–∞–∑–º–µ—Ä: 318 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 01:57

------------------------------------------------------------
08_core_loop.py (—Ç–æ–ª—å–∫–æ –ø–∞–π–ø–ª–∞–π–Ω)
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ token_loader.py
‚îÇ   ‚îú‚îÄ‚îÄ table_loader.py  
‚îÇ   ‚îú‚îÄ‚îÄ fsm_builder.py
‚îÇ   ‚îú‚îÄ‚îÄ message_sender.py
‚îÇ   ‚îî‚îÄ‚îÄ pipeline_executor.py
‚îî‚îÄ‚îÄ handlers/
    ‚îú‚îÄ‚îÄ message_handler.py
    ‚îî‚îÄ‚îÄ callback_handler.py

================================================================================
–§–ê–ô–õ: core\fsm_builder.py
–†–∞–∑–º–µ—Ä: 892 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:26

------------------------------------------------------------
#!/usr/bin/env python3
import sys  
from aiogram.fsm.state import State, StatesGroup

def create_fsm_from_states(states_found):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞—Å—Å FSM —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏"""
    class DynFSM(StatesGroup):
        pass

    for state_name in states_found:
        setattr(DynFSM, state_name, State())
    
    print(f"[fsm_builder] üß† –°–æ–∑–¥–∞–Ω–æ FSM —Å {len(states_found)} —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏", file=sys.stderr)
    return DynFSM

def extract_states_from_table(rows):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
    states_found = {r["from_state"] for r in rows} | {r["to_state"] for r in rows}
    states_found = {s for s in states_found if s and s != "‚Äî"}
    print(f"[fsm_builder] üîç –ò–∑–≤–ª–µ—á–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π: {len(states_found)}", file=sys.stderr)
    return states_found

================================================================================
–§–ê–ô–õ: core\message_sender_back.py
–†–∞–∑–º–µ—Ä: 7.4 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:52

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton,
    FSInputFile
)
from pathlib import Path

async def send_message_by_content(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    message_type = content.get("type", "text")
    
    if message_type == "text":
        return await send_text_message(bot, chat_id, content)
    elif message_type == "photo":
        return await send_photo_message(bot, chat_id, content)
    elif message_type == "document":
        return await send_document_message(bot, chat_id, content)
    elif message_type == "video":
        return await send_video_message(bot, chat_id, content)
    elif message_type == "poll":
        return await send_poll_message(bot, chat_id, content)
    elif message_type == "location":
        return await send_location_request(bot, chat_id, content)
    else:
        print(f"[message_sender] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {message_type}", file=sys.stderr)
        return await send_text_message(bot, chat_id, content)

async def send_text_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    inline_markup = build_inline_markup(content.get("inline_buttons", ""))
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inline-–∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–µ
    markup = inline_markup if inline_markup else reply_markup
    
    return await bot.send_message(
        chat_id=chat_id,
        text=content.get("text", ""),
        parse_mode=detect_parse_mode(content.get("text", "")),
        reply_markup=markup
    )

async def send_photo_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ"""
    media_file = content.get("media_file", "")
    inline_markup = build_inline_markup(content.get("inline_buttons", ""))
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inline-–∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–µ
    markup = inline_markup if inline_markup else reply_markup
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_photo(
            chat_id=chat_id,
            photo=media_file,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=markup
        )
    else:
        photo = FSInputFile(media_file)
        return await bot.send_photo(
            chat_id=chat_id,
            photo=photo,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=markup
        )

async def send_document_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç"""
    media_file = content.get("media_file", "")
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_document(
            chat_id=chat_id,
            document=media_file,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=reply_markup
        )
    else:
        document = FSInputFile(media_file)
        return await bot.send_document(
            chat_id=chat_id,
            document=document,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=reply_markup
        )

async def send_video_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ"""
    media_file = content.get("media_file", "")
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_video(
            chat_id=chat_id,
            video=media_file,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=reply_markup
        )
    else:
        video = FSInputFile(media_file)
        return await bot.send_video(
            chat_id=chat_id,
            video=video,
            caption=content.get("caption", ""),
            parse_mode=detect_parse_mode(content.get("caption", "")),
            reply_markup=reply_markup
        )

async def send_poll_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø—Ä–æ—Å"""
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    # –ü–∞—Ä—Å–∏–º –æ–ø—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    options = content.get("options", [])
    if isinstance(options, str):
        options = [opt.strip() for opt in options.split(',')]
    
    return await bot.send_poll(
        chat_id=chat_id,
        question=content.get("text", ""),
        options=options,
        reply_markup=reply_markup
    )

async def send_location_request(bot, chat_id, content):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é"""
    return await bot.send_message(
        chat_id=chat_id,
        text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–µ–π:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)]],
            resize_keyboard=True
        )
    )

def detect_parse_mode(text):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç—É"""
    if "<" in text and ">" in text:  # HTML —Ç–µ–≥–∏
        return "HTML"
    elif "**" in text or "__" in text or "`" in text:  # Markdown
        return "Markdown"
    return None

def build_reply_markup(buttons_str):
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if not buttons_str or buttons_str == "‚Äî":
        return None
    
    buttons = [btn.strip() for btn in buttons_str.split('|') if btn.strip()]
    
    keyboard_buttons = []
    for btn_text in buttons:
        keyboard_buttons.append([KeyboardButton(text=btn_text)])
    
    keyboard = ReplyKeyboardMarkup(
        keyboard=keyboard_buttons,
        resize_keyboard=True
    )
    
    print(f"[message_sender] üìã –°–æ–∑–¥–∞–Ω–∞ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {buttons}", file=sys.stderr)
    return keyboard

def build_inline_markup(buttons_str):
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if not buttons_str or buttons_str == "‚Äî":
        return None
    
    inline_buttons = []
    
    for btn_spec in buttons_str.split('|'):
        btn_spec = btn_spec.strip()
        if not btn_spec:
            continue
            
        if ':' in btn_spec:
            text, callback_data = btn_spec.split(':', 1)
            button = InlineKeyboardButton(text=text.strip(), callback_data=callback_data.strip())
        else:
            button = InlineKeyboardButton(text=btn_spec, callback_data=btn_spec)
        
        inline_buttons.append([button])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_buttons)
    
    print(f"[message_sender] üîò –°–æ–∑–¥–∞–Ω–∞ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {buttons_str}", file=sys.stderr)
    return keyboard

================================================================================
–§–ê–ô–õ: core\pipeline_executor.py
–†–∞–∑–º–µ—Ä: 3.4 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 01:58

------------------------------------------------------------
#!/usr/bin/env python3
import json
import subprocess
import sys
import tempfile
import os

async def execute_pipeline(table_path, payload, scripts_chain):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç —Ü–µ–ø–æ—á–∫—É –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        with tempfile.NamedTemporaryFile(mode='w', encoding='utf-8', suffix='.json', delete=False) as f:
            json.dump(payload, f, ensure_ascii=False)
            input_file = f.name

        result_file = None
        intermediate_files = []
        success = True
        
        for i, (script_name, script_args) in enumerate(scripts_chain):
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
            if i == 0:
                input_f = input_file
            else:
                input_f = intermediate_files[-1]

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
            if i == len(scripts_chain) - 1:
                with tempfile.NamedTemporaryFile(mode='w', encoding='utf-8', suffix='.json', delete=False) as f:
                    result_file = f.name
                output_f = result_file
            else:
                with tempfile.NamedTemporaryFile(mode='w', encoding='utf-8', suffix='.json', delete=False) as f:
                    intermediate_files.append(f.name)
                output_f = intermediate_files[-1]

            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
            cmd = [sys.executable, script_name] + script_args
            print(f"[pipeline] üîß –ó–∞–ø—É—Å–∫ {script_name}...", file=sys.stderr)
            
            with open(input_f, 'r', encoding='utf-8') as infile:
                with open(output_f, 'w', encoding='utf-8') as outfile:
                    process = subprocess.run(
                        cmd,
                        stdin=infile,
                        stdout=outfile,
                        stderr=subprocess.PIPE,
                        text=True,
                        timeout=5
                    )
                    
                    if process.stderr:
                        print(f"[pipeline] {script_name} stderr: {process.stderr.strip()}", file=sys.stderr)
                    
                    if process.returncode != 0:
                        print(f"[pipeline] ‚ùå {script_name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π", file=sys.stderr)
                        success = False
                        break

        # –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = None
        if success and result_file and os.path.exists(result_file):
            with open(result_file, 'r', encoding='utf-8') as f:
                result_data = f.read().strip()
                if result_data:
                    result = json.loads(result_data)

        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        for f in [input_file, result_file] + intermediate_files:
            try:
                if f and os.path.exists(f):
                    os.unlink(f)
            except:
                pass

        return result

    except subprocess.TimeoutExpired:
        print("[pipeline] ‚ùå –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–∏—Å", file=sys.stderr)
        return None
    except Exception as e:
        print(f"[pipeline] üí• –û—à–∏–±–∫–∞: {e}", file=sys.stderr)
        return None

================================================================================
–§–ê–ô–õ: core\table_loader.py
–†–∞–∑–º–µ—Ä: 2.2 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:21

------------------------------------------------------------
#!/usr/bin/env python3
import csv
import sys  # ‚Üê –î–û–ë–ê–í–ò–¢–¨
from pathlib import Path

def load_table(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∏–∑ CSV –∏–ª–∏ XLSX —Ñ–∞–π–ª–∞"""
    path = Path(file_path)
    
    if path.suffix.lower() in ['.xlsx', '.xls']:
        return load_excel_table(file_path)
    elif path.suffix.lower() == '.csv':
        return load_csv_table(file_path)
    else:
        print(f"[table_loader] ‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: {path.suffix}", file=sys.stderr)
        raise ValueError(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: {path.suffix}")

def load_csv_table(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç CSV —Ç–∞–±–ª–∏—Ü—É"""
    try:
        with open(file_path, encoding="utf-8") as f:
            rows = list(csv.DictReader(f))
        print(f"[table_loader] üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω CSV: {len(rows)} —Å—Ç—Ä–æ–∫", file=sys.stderr)
        return rows
    except Exception as e:
        print(f"[table_loader] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV: {e}", file=sys.stderr)
        raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV: {e}")

def load_excel_table(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç Excel —Ç–∞–±–ª–∏—Ü—É"""
    try:
        import pandas as pd
        df = pd.read_excel(file_path)
        rows = df.to_dict('records')
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–∏
        for row in rows:
            for key in row:
                if pd.isna(row[key]):
                    row[key] = ""
                else:
                    row[key] = str(row[key]).strip()
        
        print(f"[table_loader] üìä –ó–∞–≥—Ä—É–∂–µ–Ω Excel: {len(rows)} —Å—Ç—Ä–æ–∫", file=sys.stderr)
        return rows
    except ImportError:
        print("[table_loader] ‚ùå –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Excel —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pandas openpyxl", file=sys.stderr)
        raise Exception("–î–ª—è —Ä–∞–±–æ—Ç—ã —Å Excel —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pandas openpyxl")
    except Exception as e:
        print(f"[table_loader] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel: {e}", file=sys.stderr)
        raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel: {e}")

================================================================================
–§–ê–ô–õ: core\token_loader.py
–†–∞–∑–º–µ—Ä: 1.2 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:20

------------------------------------------------------------
#!/usr/bin/env python3
import os
import sys  # ‚Üê –î–û–ë–ê–í–ò–¢–¨ –≠–¢–û
from pathlib import Path

def load_bot_token():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Ñ–∞–π–ª–æ–≤"""
    token = os.getenv("BOT_TOKEN")
    if token:
        print("[core] üóùÔ∏è –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è", file=sys.stderr)
        return token.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_path = Path(".env")
    if env_path.exists():
        for line in env_path.read_text(encoding="utf-8").splitlines():
            line = line.strip()
            if line.startswith("BOT_TOKEN="):
                value = line.split("=", 1)[1].strip().strip('"\'')
                if value:
                    print("[core] üóùÔ∏è –¢–æ–∫–µ–Ω –∏–∑ .env", file=sys.stderr)
                    return value

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º token.env
    token_file = Path("token.env")
    if token_file.exists():
        raw = token_file.read_text(encoding="utf-8").strip()
        if raw:
            print("[core] üóùÔ∏è –¢–æ–∫–µ–Ω –∏–∑ token.env", file=sys.stderr)
            return raw

    return None

================================================================================
–§–ê–ô–õ: doc\deepseek_text_20250929_e42670.txt
–†–∞–∑–º–µ—Ä: 414 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:57

------------------------------------------------------------
core/message_sender/
‚îú‚îÄ‚îÄ __init__.py
‚îú‚îÄ‚îÄ base.py           # –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚îú‚îÄ‚îÄ text_sender.py    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
‚îú‚îÄ‚îÄ media_sender.py   # –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
‚îú‚îÄ‚îÄ poll_sender.py    # –û–ø—Ä–æ—Å—ã
‚îú‚îÄ‚îÄ markup_builder.py # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
‚îî‚îÄ‚îÄ format_detector.py # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

================================================================================
–§–ê–ô–õ: doc\–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç.txt
–†–∞–∑–º–µ—Ä: 16.6 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:13

------------------------------------------------------------
TableBot-Pipe –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
üèóÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
text
tablebot-pipe/
‚îú‚îÄ‚îÄ üìÅ core/                    # –Ø–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ token_loader.py        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ table_loader.py        # –ó–∞–≥—Ä—É–∑–∫–∞ CSV/XLSX —Ç–∞–±–ª–∏—Ü
‚îÇ   ‚îú‚îÄ‚îÄ fsm_builder.py         # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ FSM
‚îÇ   ‚îî‚îÄ‚îÄ message_sender.py      # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
‚îú‚îÄ‚îÄ üìÅ pipeline/               # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ find_row.py           # –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
‚îÇ   ‚îú‚îÄ‚îÄ check_guard.py        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ execute_effect.py     # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ format_notification.py # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ prepare_integration.py # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ build_message.py      # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ determine_transition.py # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞
‚îú‚îÄ‚îÄ üìÅ handlers/              # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ message_handler.py    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
‚îÇ   ‚îî‚îÄ‚îÄ callback_handler.py   # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤
‚îú‚îÄ‚îÄ üìÑ 08_core_loop.py        # –û—Å–Ω–æ–≤–Ω–æ–µ —è–¥—Ä–æ –±–æ—Ç–∞ (~50 —Å—Ç—Ä–æ–∫)
‚îú‚îÄ‚îÄ üìÑ table.csv              # –¢–∞–±–ª–∏—Ü–∞ —Å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π
‚îú‚îÄ‚îÄ üìÑ requirements.txt       # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ üìÑ .env                   # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (BOT_TOKEN)
‚îî‚îÄ‚îÄ üìÑ README.md              # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
üéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞
–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫:
text
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí Telegram ‚Üí 08_core_loop.py ‚Üí pipeline —Ñ—É–Ω–∫—Ü–∏–π ‚Üí –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É

08_core_loop.py –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è pipeline –æ–±—Ä–∞–±–æ—Ç–∫–∏:

find_row - –∏—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ

check_guard - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

execute_effect - –≤—ã–ø–æ–ª–Ω—è–µ—Ç side-effect –¥–µ–π—Å—Ç–≤–∏—è

build_message - —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

prepare_integration - –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–µ –≤—ã–∑–æ–≤—ã

determine_transition - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ message_sender

–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ FSM

üìä –§–æ—Ä–º–∞—Ç —Ç–∞–±–ª–∏—Ü—ã table.csv
–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:
csv
process_name,from_state,to_state,command
–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–ª–æ–Ω–æ–∫:
csv
process_name,from_state,to_state,command,condition,message_text,caption,media_file,reply_markup,inline_markup,notification,integrations,result_action
–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫:
–ö–æ–ª–æ–Ω–∫–∞	–û–ø–∏—Å–∞–Ω–∏–µ	–ü—Ä–∏–º–µ—Ä
process_name	–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞	PizzaOrder
from_state	–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ	start
to_state	–¶–µ–ª–µ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ	menu
command	–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞	/start –∏–ª–∏ <text>
condition	–£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è	not_empty:username
message_text	–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è	"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"
caption	–ü–æ–¥–ø–∏—Å—å –∫ –º–µ–¥–∏–∞	"–ù–∞—à–µ –º–µ–Ω—é"
media_file	–§–∞–π–ª –º–µ–¥–∏–∞	menu.jpg
reply_markup	–û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏	"–î–∞|–ù–µ—Ç|–û—Ç–º–µ–Ω–∞"
inline_markup	Inline-–∫–Ω–æ–ø–∫–∏	"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:confirm|–û—Ç–º–µ–Ω–∞:cancel"
notification	–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è	"–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç: {order_id}"
integrations	–í–Ω–µ—à–Ω–∏–µ –≤—ã–∑–æ–≤—ã	http:POST https://api.com/order
result_action	Side-effect	save:order_id
–ü—Ä–∏–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã:
csv
process_name,from_state,to_state,command,message_text,reply_markup,inline_markup,notification
PizzaOrder,start,menu,/start,"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:","üçï –ó–∞–∫–∞–∑–∞—Ç—å|üìã –ú–µ–Ω—é|üè™ –û –Ω–∞—Å",,,
PizzaOrder,menu,size,üçï –ó–∞–∫–∞–∑–∞—Ç—å,"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã:","30 —Å–º|40 —Å–º|50 —Å–º",,,
PizzaOrder,size,toppings,<text>,"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø–ø–∏–Ω–≥–∏:",,"üßÄ –°—ã—Ä:cheese|üçÑ –ì—Ä–∏–±—ã:mushrooms","–í—ã–±—Ä–∞–Ω–æ: {text}"
PizzaOrder,toppings,address,‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å,"–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:",,,,
PizzaOrder,address,finish,<text>,,"üìç –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–¥—Ä–µ—Å",,"–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ê–¥—Ä–µ—Å: {text}"
üîß –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã (pipeline/)
1. find_row.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –∫–æ–º–∞–Ω–¥–µ

–õ–æ–≥–∏–∫–∞: –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç from_state –∏ command, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç <text> –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –ù–∞–π–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ None

2. check_guard.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: not_empty:field, equals:field:value

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: True –µ—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Ö–æ–¥

3. execute_effect.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ side-effect –¥–µ–π—Å—Ç–≤–∏–π

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: save:field, clear:field

–î–µ–π—Å—Ç–≤–∏–µ: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö

4. format_notification.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ó–∞–º–µ–Ω–∞ {field} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ payload

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç

5. prepare_integration.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: http:..., email:..., webhook:...

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

6. build_message.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: –¢–µ–∫—Å—Ç, –º–µ–¥–∏–∞, –∫–Ω–æ–ø–∫–∏, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –û–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

7. determine_transition.py
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è

–õ–æ–≥–∏–∫–∞: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç guard –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç to_state

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –ò–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ None

üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
bash
pip install -r requirements.txt
2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞:
bash
# –í–∞—Ä–∏–∞–Ω—Ç 1: –§–∞–π–ª .env
echo "BOT_TOKEN=your_telegram_bot_token" > .env

# –í–∞—Ä–∏–∞–Ω—Ç 2: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
export BOT_TOKEN=your_telegram_bot_token

# –í–∞—Ä–∏–∞–Ω—Ç 3: –§–∞–π–ª token.env
echo "your_telegram_bot_token" > token.env
3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã:
–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ table.csv —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—É.

4. –ó–∞–ø—É—Å–∫:
bash
python 08_core_loop.py table.csv
üéØ –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ:
‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ—Å—Ç—å - –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ

‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - —Ñ–∞–π–ª—ã –ø–æ–º–µ—â–∞—é—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º —ç–∫—Ä–∞–Ω–µ

‚úÖ –ù–∏–∑–∫–∞—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç –¥—Ä—É–≥–∏–µ

‚úÖ –í—ã—Å–æ–∫–∞—è —Å–≤—è–∑–Ω–æ—Å—Ç—å - –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–º–µ–µ—Ç –æ–¥–Ω—É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å

–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ:
‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –∏–º–ø–æ—Ä—Ç—ã –≤–º–µ—Å—Ç–æ subprocess

‚úÖ –¢–∏–ø–∏–∑–∞—Ü–∏—è - Python —Ç–∏–ø—ã –≤–º–µ—Å—Ç–æ JSON

‚úÖ –û—Ç–ª–∞–¥–∫–∞ - stack traces –∏ breakpoints

‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å - –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ

–ë–∏–∑–Ω–µ—Å-–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
‚úÖ –ì–∏–±–∫–æ—Å—Ç—å - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ, –∞ –Ω–µ –≤ –∫–æ–¥–µ

‚úÖ –°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏—á —á–µ—Ä–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CSV

‚úÖ –ü–æ–Ω—è—Ç–Ω–æ—Å—Ç—å - —Ç–∞–±–ª–∏—Ü–∞ —á–∏—Ç–∞–µ—Ç—Å—è –±–∏–∑–Ω–µ—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å - –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∫–æ–º–∞–Ω–¥—ã

üîÑ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
–î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É –≤ table.csv —Å –Ω–æ–≤—ã–º from_state/to_state

–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:
–†–∞—Å—à–∏—Ä—å—Ç–µ build_message.py –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞

–†–∞—Å—à–∏—Ä—å—Ç–µ message_sender.py –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

–î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:
–†–∞—Å—à–∏—Ä—å—Ç–µ prepare_integration.py –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞

–†–µ–∞–ª–∏–∑—É–π—Ç–µ –≤—ã–∑–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ

üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è
–í—Å–µ —Ñ–∞–π–ª—ã –∫–æ–¥–∞ —Å—Ç–∞—Ä–∞—é—Ç—Å—è –±—ã—Ç—å ‚â§ 50 —Å—Ç—Ä–æ–∫

–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É

–ö–æ–¥ –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—é –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é

–°–∏—Å—Ç–µ–º–∞ –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö pipeline —Ñ—É–Ω–∫—Ü–∏–π

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ inline-–∫–Ω–æ–ø–∫–∏

–≠—Ç–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –≥–∏–±–∫–æ—Å—Ç—å—é —Ç–∞–±–ª–∏—á–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã! üöÄ

–∞ –ø–æ—á–µ–º—É —Ç—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª –ø—Ä–æ xls –æ–ø—Ü–∏—é?
–í—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤—ã! –Ø –∑–∞–±—ã–ª –ø—Ä–æ –ø–æ–¥–¥–µ—Ä–∂–∫—É Excel. –î–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º —ç—Ç—É –≤–∞–∂–Ω—É—é —Ñ–∏—á—É –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é.

üîß –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ:
–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü:
–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞:

‚úÖ CSV - –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤ –∏ –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ—Å—Ç–∏

‚úÖ Excel (XLSX) - –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º

–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
text
tablebot-pipe/
‚îú‚îÄ‚îÄ üìÅ core/
‚îÇ   ‚îú‚îÄ‚îÄ token_loader.py
‚îÇ   ‚îú‚îÄ‚îÄ table_loader.py     # ‚Üê –ü–æ–¥–¥–µ—Ä–∂–∫–∞ CSV –∏ XLSX!
‚îÇ   ‚îú‚îÄ‚îÄ fsm_builder.py
‚îÇ   ‚îî‚îÄ‚îÄ message_sender.py
table_loader.py –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
python
def load_table(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∏–∑ CSV –∏–ª–∏ XLSX —Ñ–∞–π–ª–∞"""
    if path.suffix.lower() in ['.xlsx', '.xls']:
        return load_excel_table(file_path)    # Excel
    elif path.suffix.lower() == '.csv':
        return load_csv_table(file_path)      # CSV
üéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Excel:
–î–ª—è –±–∏–∑–Ω–µ—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
‚úÖ –í–∏–∑—É–∞–ª—å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - —Ü–≤–µ—Ç–∞, —à—Ä–∏—Ñ—Ç—ã, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö - –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏, –≤–∞–ª–∏–¥–∞—Ü–∏—è

‚úÖ –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ - —É–¥–æ–±–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä

‚úÖ –ù–µ—Å–∫–æ–ª—å–∫–æ –ª–∏—Å—Ç–æ–≤ - —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ

‚úÖ –§–æ—Ä–º—É–ª—ã - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è

–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:
‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ - –ø–æ—è—Å–Ω–µ–Ω–∏—è –∫ –ø–æ–ª—è–º

‚úÖ –ó–∞—â–∏—Ç–∞ —è—á–µ–µ–∫ - –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π

‚úÖ –£—Å–ª–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π

üìä –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Excel:
–§–∞–π–ª: business_process.xlsx
–õ–∏—Å—Ç "PizzaOrder":

csv
process_name | from_state | to_state | command     | message_text          | reply_markup
PizzaOrder   | start      | menu     | /start      | –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!     | üçï –ó–∞–∫–∞–∑–∞—Ç—å|üìã –ú–µ–Ω—é
PizzaOrder   | menu       | size     | üçï –ó–∞–∫–∞–∑–∞—Ç—å | –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä:      | 30 —Å–º|40 —Å–º|50 —Å–º
PizzaOrder   | size       | toppings | <text>      | –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø–ø–∏–Ω–≥–∏:    | 
–õ–∏—Å—Ç "CustomerSupport":

csv
process_name      | from_state | to_state | command | message_text
CustomerSupport   | start      | issue    | /help   | –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:
CustomerSupport   | issue      | contact  | <text>  | –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
üöÄ –ó–∞–ø—É—Å–∫ —Å Excel:
bash
# –ó–∞–ø—É—Å–∫ —Å CSV (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
python 08_core_loop.py table.csv

# –ó–∞–ø—É—Å–∫ —Å Excel (–Ω–æ–≤–∞—è —Ñ–∏—á–∞!)
python 08_core_loop.py business_process.xlsx

# –ó–∞–ø—É—Å–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ª–∏—Å—Ç–æ–º
python 08_core_loop.py business_process.xlsx -sheet PizzaOrder
üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è Excel –ø–æ–¥–¥–µ—Ä–∂–∫–∏:
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
bash
pip install pandas openpyxl
–§–æ—Ä–º–∞—Ç Excel —Ñ–∞–π–ª–∞:
‚úÖ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫

‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–µ –∂–µ –∫–æ–ª–æ–Ω–∫–∏ —á—Ç–æ –∏ –≤ CSV

‚úÖ –ù–µ—Å–∫–æ–ª—å–∫–æ –ª–∏—Å—Ç–æ–≤ - –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞

‚úÖ –ê–≤—Ç–æ–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: —á–∏—Å–ª–∞, –¥–∞—Ç—ã ‚Üí —Å—Ç—Ä–æ–∫–∏

üîß –ü—Ä–∏–º–µ—Ä table_loader.py —Å Excel –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π:
python
def load_excel_table(file_path, sheet_name=None):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∏–∑ Excel —Ñ–∞–π–ª–∞"""
    try:
        import pandas as pd
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ Excel
        if sheet_name:
            df = pd.read_excel(file_path, sheet_name=sheet_name)
        else:
            df = pd.read_excel(file_path)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å–ª–æ–≤–∞—Ä–∏
        rows = df.to_dict('records')
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å—Ç—Ä–æ–∫–∏
        for row in rows:
            for key in row:
                if pd.isna(row[key]):
                    row[key] = ""
                else:
                    row[key] = str(row[key]).strip()
        
        print(f"[table_loader] üìä –ó–∞–≥—Ä—É–∂–µ–Ω Excel: {len(rows)} —Å—Ç—Ä–æ–∫")
        return rows
        
    except ImportError:
        raise Exception("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pandas openpyxl")
    except Exception as e:
        raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel: {e}")
üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∞:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CSV –∫–æ–≥–¥–∞:
–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã

–ù—É–∂–Ω–∞ –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ—Å—Ç—å –≤ Git

–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞–º–∏

CI/CD –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Excel –∫–æ–≥–¥–∞:
–°–ª–æ–∂–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã

–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

–ù—É–∂–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è

–ù–µ—Å–∫–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤

üìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞:
–ë–∞–∑–æ–≤—ã–π –∑–∞–ø—É—Å–∫:
bash
# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
python 08_core_loop.py table.csv
python 08_core_loop.py process.xlsx
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫:
bash
# –£–∫–∞–∑–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
python 08_core_loop.py business.xlsx -sheet OrderProcess

# –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
python 08_core_loop.py business.xlsx --list-sheets
–¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≥–∏–±–∫–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üìä‚ú®

================================================================================
–§–ê–ô–õ: handlers\callback_handler.py
–†–∞–∑–º–µ—Ä: 871 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:25

------------------------------------------------------------
#!/usr/bin/env python3
from aiogram import types
from handlers.message_handler import handle_message

async def handle_callback(callback: types.CallbackQuery, state, table_path, DynFSM, bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏"""
    # –°–æ–∑–¥–∞–µ–º fake-message –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
    fake_message = types.Message(
        message_id=callback.message.message_id,
        from_user=callback.from_user,
        chat=callback.message.chat  # –≤–º–µ—Å—Ç–æ callback.chat
        date=callback.message.date,
        text=callback.data  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_data –∫–∞–∫ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await handle_message(fake_message, state, table_path, DynFSM, bot)
    await callback.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ

================================================================================
–§–ê–ô–õ: handlers\message_handler.py
–†–∞–∑–º–µ—Ä: 2.2 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:10

------------------------------------------------------------
#!/usr/bin/env python3
from aiogram.filters import Command
from core.pipeline_executor import execute_pipeline
from core.message_sender import send_message_by_content

async def handle_message(msg, state, table_path, DynFSM, bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        data = await state.get_data()
        current_state = data.get("current_state", "start")
        
        # –°–æ–∑–¥–∞–µ–º payload –¥–ª—è –ø–∞–π–ø–ª–∞–π–Ω–∞
        payload = {"current_state": current_state, "text": msg.text}
        
        print(f"[handler] üì• –°–æ–æ–±—â–µ–Ω–∏–µ: state={current_state!r}, text={msg.text!r}", file=sys.stderr)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ø–æ—á–∫—É —Å–∫—Ä–∏–ø—Ç–æ–≤
        scripts_chain = [
            ("02_find_row.py", [str(table_path)]),
            ("03_guard.py", []),
            ("04_effect.py", []),
            ("05_notification.py", []),
            ("06_integrations.py", []),
            ("09_message_builder.py", []),
            ("07_transition.py", [])
        ]

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–∞–π–ø–ª–∞–π–Ω
        result = await execute_pipeline(table_path, payload, scripts_chain)
        
        if not result:
            await msg.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return

        print(f"[handler] üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç: next_state={result.get('next_state')!r}", file=sys.stderr)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if result.get("message_content"):
            await send_message_by_content(bot, msg.chat.id, result["message_content"])

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if result.get("next_state"):
            next_state = result["next_state"]
            if hasattr(DynFSM, next_state):
                await state.set_state(getattr(DynFSM, next_state))
                await state.update_data(current_state=next_state)
                print(f"[handler] üîÑ –ü–µ—Ä–µ—Ö–æ–¥: {current_state!r} ‚Üí {next_state!r}", file=sys.stderr)

    except Exception as e:
        print(f"[handler] üí• –û—à–∏–±–∫–∞: {e}", file=sys.stderr)
        await msg.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

================================================================================
–§–ê–ô–õ: pipeline\build_message.py
–†–∞–∑–º–µ—Ä: 2.6 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:31

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from .format_notification import format_notification

def build_message_content(row, payload):
    """–°—Ç—Ä–æ–∏—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    if not row:
        return None
    
    content = {"type": "text"}
    
    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É message_text, –ø–æ—Ç–æ–º notification)
    message_text = ""
    if row.get("message_text") and row["message_text"] != "‚Äî":
        message_text = row["message_text"]
    elif row.get("notification") and row["notification"] != "‚Äî":
        message_text = format_notification(row, payload)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if message_text:
        content["text"] = message_text
    
    # –ü–æ–¥–ø–∏—Å—å –¥–ª—è –º–µ–¥–∏–∞
    if row.get("caption") and row["caption"] != "‚Äî":
        content["caption"] = row["caption"]
    
    # –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
    if row.get("media_file") and row["media_file"] != "‚Äî":
        content["media_file"] = row["media_file"]
        
        file_ext = row["media_file"].lower()
        # –î–ª—è URL —Ñ–∞–π–ª–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é –≤ URL
        if any(ext in file_ext for ext in ['.jpg', '.jpeg', '.png', '.gif', '.webp']):
            content["type"] = "photo"
        elif any(ext in file_ext for ext in ['.mp4', '.avi', '.mov', '.mkv']):
            # –î–ª—è URL –≤–∏–¥–µ–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º document, –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö - video
            if row["media_file"].startswith(('http://', 'https://')):
                content["type"] = "document"
            else:
                content["type"] = "video"
        elif any(ext in file_ext for ext in ['.pdf', '.doc', '.docx', '.txt']):
            content["type"] = "document"
        elif any(ext in file_ext for ext in ['.mp3', '.wav', '.ogg']):
            content["type"] = "audio"
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    if row.get("reply_markup") and row["reply_markup"] != "‚Äî":
        content["reply_buttons"] = row["reply_markup"]
    
    if row.get("inline_markup") and row["inline_markup"] != "‚Äî":
        content["inline_buttons"] = row["inline_markup"]
    
    # –û–ø—Ä–æ—Å—ã (–¥–æ–±–∞–≤–ª—è–µ–º options)
    if row.get("entities") and row["entities"] != "‚Äî":
        content["options"] = [opt.strip() for opt in row["entities"].split(',')]
        content["type"] = "poll"
    
    print(f"[build_message] üé® –°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç: {content['type']}, text: {bool(content.get('text'))}, media: {content.get('media_file')}", file=sys.stderr)
    return content

================================================================================
–§–ê–ô–õ: pipeline\check_guard.py
–†–∞–∑–º–µ—Ä: 772 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:24

------------------------------------------------------------
#!/usr/bin/env python3

import sys

def check_guard(row, payload, current_state):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è guard'–∞"""
    if not row or not row.get("condition") or row["condition"] == "‚Äî":
        return False
    
    condition = row["condition"]
    print(f"[check_guard] üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è: {condition!r}")
    
    # –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ª–æ–≤–∏–π
    if condition.startswith("not_empty:"):
        field = condition.split(":", 1)[1]
        result = bool(payload.get(field))
        print(f"[check_guard] not_empty:{field} ‚Üí {result}")
        return not result  # True = –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
    
    print(f"[check_guard] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ, —Ä–∞–∑—Ä–µ—à–∞—é")
    return False

================================================================================
–§–ê–ô–õ: pipeline\determine_transition.py
–†–∞–∑–º–µ—Ä: 422 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:24

------------------------------------------------------------
#!/usr/bin/env python3

import sys

def determine_transition(row, skip_guard):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —Å—Ç–µ–π—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞"""
    if skip_guard or not row:
        return None
    
    next_state = row.get("to_state")
    if next_state and next_state != "‚Äî":
        print(f"[determine_transition] üîÑ –ü–µ—Ä–µ—Ö–æ–¥: {next_state!r}")
        return next_state
    
    return None

================================================================================
–§–ê–ô–õ: pipeline\execute_effect.py
–†–∞–∑–º–µ—Ä: 767 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:25

------------------------------------------------------------
#!/usr/bin/env python3

import sys

def execute_effect(row, payload):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç side-effect –¥–µ–π—Å—Ç–≤–∏—è"""
    if not row or not row.get("result_action") or row["result_action"] == "‚Äî":
        return
    
    action = row["result_action"]
    print(f"[execute_effect] ‚ö° –î–µ–π—Å—Ç–≤–∏–µ: {action!r}")
    
    if action.startswith("save:"):
        field = action.split(":", 1)[1]
        value = payload.get(field)
        print(f"[execute_effect] üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {field} = {value!r}")
    
    elif action.startswith("clear:"):
        field = action.split(":", 1)[1]
        print(f"[execute_effect] üßπ –û—á–∏—Å—Ç–∫–∞: {field}")
    
    else:
        print(f"[execute_effect] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")

================================================================================
–§–ê–ô–õ: pipeline\find_row.py
–†–∞–∑–º–µ—Ä: 1.3 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:23

------------------------------------------------------------
#!/usr/bin/env python3
import csv
import sys  # ‚Üê –î–û–ë–ê–í–ò–¢–¨

def find_row(table_path, current_state, user_text):
    """–ò—â–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –∫–æ–º–∞–Ω–¥–µ"""
    try:
        with open(table_path, encoding="utf-8") as f:
            rows = list(csv.DictReader(f))
    except Exception as e:
        print(f"[find_row] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}", file=sys.stderr)
        return None
    
    print(f"[find_row] üîç –ü–æ–∏—Å–∫: state={current_state!r}, text={user_text!r}", file=sys.stderr)
    
    for row in rows:
        if row["from_state"] == current_state:
            # –ö–æ–º–∞–Ω–¥–∞ <text> –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥)
            if row["command"] == "<text>" and not user_text.startswith('/'):
                print(f"[find_row] ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ <text>: {row['to_state']!r}", file=sys.stderr)
                return row
            # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
            elif row["command"] == user_text:
                print(f"[find_row] ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ: {row['to_state']!r}", file=sys.stderr)
                return row
    
    print(f"[find_row] ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Å—Ç—Ä–æ–∫–∏", file=sys.stderr)
    return None

================================================================================
–§–ê–ô–õ: pipeline\format_notification.py
–†–∞–∑–º–µ—Ä: 869 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:29

------------------------------------------------------------
#!/usr/bin/env python3
import sys

def format_notification(row, payload):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    if not row or not row.get("notification") or row["notification"] == "‚Äî":
        return None
    
    template = row["notification"]
    try:
        # –ó–∞–º–µ–Ω—è–µ–º {field} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ payload
        text = template
        for key, value in payload.items():
            placeholder = "{" + key + "}"
            if placeholder in text:
                text = text.replace(placeholder, str(value))
        
        print(f"[format_notification] üí¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {template!r} ‚Üí {text!r}", file=sys.stderr)
        return text
    
    except Exception as e:
        print(f"[format_notification] ‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}", file=sys.stderr)
        return template

================================================================================
–§–ê–ô–õ: pipeline\prepare_integration.py
–†–∞–∑–º–µ—Ä: 725 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:25

------------------------------------------------------------
#!/usr/bin/env python3

import sys

def prepare_integration(row):
    """–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π"""
    if not row or not row.get("integrations") or row["integrations"] == "‚Äî":
        return None
    
    integration = row["integrations"]
    print(f"[prepare_integration] üîå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration!r}")
    
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
    if integration.startswith("http:"):
        print(f"[prepare_integration] üåê HTTP –∑–∞–ø—Ä–æ—Å: {integration}")
    
    elif integration.startswith("email:"):
        print(f"[prepare_integration] üìß Email: {integration}")
    
    return integration

================================================================================
–§–ê–ô–õ: pipeline\__init__.py
–†–∞–∑–º–µ—Ä: 576 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:29

------------------------------------------------------------
#!/usr/bin/env python3
# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö pipeline —Ñ—É–Ω–∫—Ü–∏–π
from .find_row import find_row
from .check_guard import check_guard
from .execute_effect import execute_effect
from .format_notification import format_notification
from .prepare_integration import prepare_integration
from .build_message import build_message_content
from .determine_transition import determine_transition

__all__ = [
    'find_row',
    'check_guard', 
    'execute_effect',
    'format_notification',
    'prepare_integration',
    'build_message_content',
    'determine_transition'
]

================================================================================
–§–ê–ô–õ: core\message_sender\base.py
–†–∞–∑–º–µ—Ä: 1.7 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:57

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from .text_sender import send_text_message
from .media_sender import send_photo_message, send_document_message, send_video_message
from .poll_sender import send_poll_message
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

async def send_message_by_content(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    message_type = content.get("type", "text")
    
    if message_type == "text":
        return await send_text_message(bot, chat_id, content)
    elif message_type == "photo":
        return await send_photo_message(bot, chat_id, content)
    elif message_type == "document":
        return await send_document_message(bot, chat_id, content)
    elif message_type == "video":
        return await send_video_message(bot, chat_id, content)
    elif message_type == "poll":
        return await send_poll_message(bot, chat_id, content)
    elif message_type == "location":
        return await send_location_request(bot, chat_id, content)
    else:
        print(f"[message_sender] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {message_type}", file=sys.stderr)
        return await send_text_message(bot, chat_id, content)

async def send_location_request(bot, chat_id, content):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é"""
    return await bot.send_message(
        chat_id=chat_id,
        text="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–µ–π:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)]],
            resize_keyboard=True
        )
    )

================================================================================
–§–ê–ô–õ: core\message_sender\format_detector.py
–†–∞–∑–º–µ—Ä: 391 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:58

------------------------------------------------------------
#!/usr/bin/env python3

def detect_parse_mode(text):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç—É"""
    if not text:
        return None
    
    if "<" in text and ">" in text:  # HTML —Ç–µ–≥–∏
        return "HTML"
    elif "**" in text or "__" in text or "`" in text:  # Markdown
        return "MarkdownV2"
    return None

================================================================================
–§–ê–ô–õ: core\message_sender\markup_builder.py
–†–∞–∑–º–µ—Ä: 1.6 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:58

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

def build_reply_markup(buttons_str):
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if not buttons_str or buttons_str == "‚Äî":
        return None
    
    buttons = [btn.strip() for btn in buttons_str.split('|') if btn.strip()]
    
    keyboard_buttons = []
    for btn_text in buttons:
        keyboard_buttons.append([KeyboardButton(text=btn_text)])
    
    keyboard = ReplyKeyboardMarkup(
        keyboard=keyboard_buttons,
        resize_keyboard=True
    )
    
    print(f"[markup_builder] üìã –°–æ–∑–¥–∞–Ω–∞ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {buttons}", file=sys.stderr)
    return keyboard

def build_inline_markup(buttons_str):
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if not buttons_str or buttons_str == "‚Äî":
        return None
    
    inline_buttons = []
    
    for btn_spec in buttons_str.split('|'):
        btn_spec = btn_spec.strip()
        if not btn_spec:
            continue
            
        if ':' in btn_spec:
            text, callback_data = btn_spec.split(':', 1)
            button = InlineKeyboardButton(text=text.strip(), callback_data=callback_data.strip())
        else:
            button = InlineKeyboardButton(text=btn_spec, callback_data=btn_spec)
        
        inline_buttons.append([button])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_buttons)
    
    print(f"[markup_builder] üîò –°–æ–∑–¥–∞–Ω–∞ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {buttons_str}", file=sys.stderr)
    return keyboard

================================================================================
–§–ê–ô–õ: core\message_sender\media_sender.py
–†–∞–∑–º–µ—Ä: 3.2 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:58

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from aiogram.types import FSInputFile
from .markup_builder import build_reply_markup, build_inline_markup
from .format_detector import detect_parse_mode

async def send_photo_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ"""
    media_file = content.get("media_file", "")
    inline_markup = build_inline_markup(content.get("inline_buttons", ""))
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inline-–∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–µ
    markup = inline_markup if inline_markup else reply_markup
    
    caption = content.get("caption", "")
    parse_mode = detect_parse_mode(caption)
    
    print(f"[media_sender] üñºÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ: {media_file}", file=sys.stderr)
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_photo(
            chat_id=chat_id,
            photo=media_file,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=markup
        )
    else:
        photo = FSInputFile(media_file)
        return await bot.send_photo(
            chat_id=chat_id,
            photo=photo,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=markup
        )

async def send_document_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç"""
    media_file = content.get("media_file", "")
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    caption = content.get("caption", "")
    parse_mode = detect_parse_mode(caption)
    
    print(f"[media_sender] üìÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {media_file}", file=sys.stderr)
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_document(
            chat_id=chat_id,
            document=media_file,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=reply_markup
        )
    else:
        document = FSInputFile(media_file)
        return await bot.send_document(
            chat_id=chat_id,
            document=document,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=reply_markup
        )

async def send_video_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ"""
    media_file = content.get("media_file", "")
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    caption = content.get("caption", "")
    parse_mode = detect_parse_mode(caption)
    
    print(f"[media_sender] üé• –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ: {media_file}", file=sys.stderr)
    
    if media_file.startswith(('http://', 'https://')):
        return await bot.send_video(
            chat_id=chat_id,
            video=media_file,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=reply_markup
        )
    else:
        video = FSInputFile(media_file)
        return await bot.send_video(
            chat_id=chat_id,
            video=video,
            caption=caption,
            parse_mode=parse_mode,
            reply_markup=reply_markup
        )

================================================================================
–§–ê–ô–õ: core\message_sender\poll_sender.py
–†–∞–∑–º–µ—Ä: 727 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:58

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from .markup_builder import build_reply_markup

async def send_poll_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø—Ä–æ—Å"""
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    
    # –ü–∞—Ä—Å–∏–º –æ–ø—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    options = content.get("options", [])
    if isinstance(options, str):
        options = [opt.strip() for opt in options.split(',')]
    
    print(f"[poll_sender] üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞: {len(options)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", file=sys.stderr)
    
    return await bot.send_poll(
        chat_id=chat_id,
        question=content.get("text", ""),
        options=options,
        reply_markup=reply_markup
    )

================================================================================
–§–ê–ô–õ: core\message_sender\text_sender.py
–†–∞–∑–º–µ—Ä: 1.3 kB
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 03:32

------------------------------------------------------------
#!/usr/bin/env python3
import sys
from .markup_builder import build_reply_markup, build_inline_markup
from .format_detector import detect_parse_mode

async def send_text_message(bot, chat_id, content):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    if not content.get("text") and not content.get("caption"):
        print(f"[text_sender] ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É: –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∏", file=sys.stderr)
        return None
    
    reply_markup = build_reply_markup(content.get("reply_buttons", ""))
    inline_markup = build_inline_markup(content.get("inline_buttons", ""))
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º inline-–∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–µ
    markup = inline_markup if inline_markup else reply_markup
    
    parse_mode = detect_parse_mode(content.get("text", ""))
    
    text_to_send = content.get("text", "") or content.get("caption", "")
    
    print(f"[text_sender] üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞: {len(text_to_send)} chars, parse_mode: {parse_mode}", file=sys.stderr)
    
    return await bot.send_message(
        chat_id=chat_id,
        text=text_to_send,
        parse_mode=parse_mode,
        reply_markup=markup
    )

================================================================================
–§–ê–ô–õ: core\message_sender\__init__.py
–†–∞–∑–º–µ—Ä: 608 Bytes
–ò–∑–º–µ–Ω–µ–Ω: 2025-09-30 02:57

------------------------------------------------------------
#!/usr/bin/env python3
from .base import send_message_by_content
from .text_sender import send_text_message
from .media_sender import send_photo_message, send_document_message, send_video_message
from .poll_sender import send_poll_message
from .markup_builder import build_reply_markup, build_inline_markup
from .format_detector import detect_parse_mode

__all__ = [
    'send_message_by_content',
    'send_text_message',
    'send_photo_message', 
    'send_document_message',
    'send_video_message',
    'send_poll_message',
    'build_reply_markup',
    'build_inline_markup',
    'detect_parse_mode'
]

================================================================================
–ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù.
–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: 33
–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: 114.5 kB
–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: 2025-09-30 03:35:45
